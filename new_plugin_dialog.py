# -*- coding: utf-8 -*-
"""
/***************************************************************************
 newDialog
                                 A QGIS plugin
 this is new plugin
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-01-28
        git sha              : $Format:%H$
        copyright            : (C) 2024 by astri
        email                : astriwidyastiti@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.core import QgsFeature, QgsGeometry, QgsVectorLayer, QgsPointXY, QgsProject

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'new_plugin_dialog_base.ui'))


class newDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(newDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.pbPlot.clicked.connect(self.plot_polygon)
        
    def plot_polygon(self):
        try:

            x1 = float(self.nilai_x1.text())
            y1 = float(self.nilai_y1.text())
            x2 = float(self.nilai_x2.text())
            y2 = float(self.nilai_y2.text())
            x3 = float(self.nilai_x3.text())
            y3 = float(self.nilai_y3.text())
            x4 = float(self.nilai_x4.text())
            y4 = float(self.nilai_y4.text())
 
            polygon_layer = QgsVectorLayer("Polygon?crs=EPSG:4326", "Polygon", "memory")
            provider = polygon_layer.dataProvider()


            polygon_geometry = QgsGeometry.fromPolygonXY([[QgsPointXY(x1, y1), QgsPointXY(x2, y2), QgsPointXY(x3, y3), QgsPointXY(x4, y4)]])

            polygon_feature = QgsFeature()
            polygon_feature.setGeometry(polygon_geometry)
            provider.addFeature(polygon_feature)
            polygon_layer.updateExtents()


            QgsProject.instance().addMapLayer(polygon_layer)

            self.close()  
        except ValueError:
            print("Pastikan Anda memasukkan nilai koordinat yang valid.")



    
    

